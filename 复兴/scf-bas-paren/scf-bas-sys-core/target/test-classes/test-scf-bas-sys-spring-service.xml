<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.huateng.scf.bas.sys.dao;
	com.huateng.scf.bas.sys.service;
	com.huateng.scf.bas.crm.service;
	com.huateng.scf.bas.com.service.impl;
	com.huateng.scf.bas.prd.dao;
	com.huateng.scf.bas.sys.dao.ext;
	com.huateng.scf.bas.crm.dao;
	com.huateng.scf.bas.crr.dao.ext" />
	
	<import resource="spring-transaction-test.xml" />
	
	<bean name="sqlExecutor" class="com.huateng.base.ibatisEx.PaginationSqlExecutor">
		<property name="dialect">
			<!--<bean class="com.huateng.base.common.dialect.MysqlDialect" /> -->
			 <bean class="com.huateng.base.common.dialect.OracleDialect" />
		</property>
	</bean>
	<bean name="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"></bean>
	<bean name="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:ibatis/sql-map-config.xml</value>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="lobHandler">
			<ref bean="lobHandler" />
		</property>
	</bean>

 	<bean name="sqlMapClientTemplate" class="com.huateng.base.ibatisEx.IbatisTemplate">
		<property name="sqlMapClient">
			<ref bean="sqlMapClient" />
		</property>
	</bean>
	
	<!-- 加载properties文件 -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:application-test.properties</value>
				<value>classpath*:scube_service.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 采用数据源apache的dbcp做为数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${spring.datasource.driverClassName}" />
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
		<property name="defaultAutoCommit" value="false" />
		<!-- initialSize: 启动创建连接 -->
		<property name="initialSize" value="5" />
		<!-- maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="30" />
		<!-- minIdle: 最小空闲连接 -->
		<property name="minIdle" value="5" />
		<!-- maxActive: 最大连接数量 -->
		<property name="maxActive" value="800" />
		<!-- removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!-- removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="300" />
		<!-- maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
		<property name="maxWait" value="-1" />
		<property name="validationQuery" value="select 1 from dual"></property>
	</bean>
	
	<!-- scube rpc 服务端配置 -->
	<bean class="com.huateng.scube.common.ScubeServiceConfig" init-method="init">
		<property name="application" value="${scube.application}"/>
		<property name="address" value="${scube.registries.address}"/>
		<property name="minWorkerThread" value="${scube.service.minWorkerThread}"/>
		<property name="maxWorkerThread" value="${scube.service.maxWorkerThread}"/>
	</bean>
	
	
	<!-- scube服务端 扫描指定包 发布motan服务 -->
	<bean class="com.huateng.scube.server.impl.ScubeServiceAnnotationScan" init-method="doScan">
		<property name="packList">
			<list>
				<value>com.huateng.scf.bas.com.service.impl</value>
				<value>com.huateng.scf.bas.sys.service</value>
				<value>com.huateng.scf.bas.crm.service</value>
			</list>
		</property>
	</bean>
	<bean id="memCachedClient" class="com.whalin.MemCached.MemCachedClient">
		<constructor-arg>
			<value>memcachedPool</value>
		</constructor-arg>
	</bean>
	<bean id="memcachedPool" class="com.whalin.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>memcachedPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>170.252.200.73:11211</value>
			</list>
		</property>
		<property name="initConn">
			<value>2</value>
		</property>
		<property name="minConn">
			<value>2</value>
		</property>
		<property name="maxConn">
			<value>5</value>
		</property>
	</bean>
	<!-- memcached service config -->
	<bean id="memcacheManager" class="com.huateng.base.cache.memcached.MemcachedManager">
		<property name="cacheClient" ref="memCachedClient"></property>
	</bean>

	<bean id="memcacheService" class="com.huateng.base.cache.impl.CacheServiceImpl">
		<property name="cacheManager" ref="memcacheManager"></property>
	</bean>
	
	  <!-- scube rpc 客户端配置 -->
	<bean class="com.huateng.scube.common.ScubeClientConfig" init-method="init">
		<property name="application" value="${scube.application}"/>
		<!-- <property name="address" value="${scube.registries.address}"/> -->
		<property name="address" value="${scube.server.address}"/>
		<property name="requestTimeout" value="${scube.client.requestTimeout}"/>
		<property name="transMaxSize" value="${scube.client.transMaxSize}"/>
	</bean>
	<bean id="processService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.flowsharp.api.IProcessService</value>
		</property>
	</bean>
	<bean id="taskService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.flowsharp.api.ITaskService</value>
		</property>
	</bean>
	<bean id="websiteService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.flowsharp.api.IWebsiteService</value>
		</property>
	</bean>
	<!-- 缓存测试 
	<bean id="scfSysCacheService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.scf.bas.sys.service.IScfSysCacheService</value>
		</property>
	</bean>-->
	<bean id="scfSysCacheService" class="com.huateng.scf.bas.sys.service.impl.ScfMcachedClientServiceImpl">
		<property name="memCachedClient" ref="memCachedClient"></property>
	</bean>
	<bean id="orgService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.authority.service.OrgService</value>
		</property>
	</bean>
	<bean id="scubeUserService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.authority.inter.service.ScubeUserService</value>
		</property>
	</bean>
	<bean id="roleService" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.authority.service.RoleService</value>
		</property>
	</bean>
	<!--服务端发布的服务service -->
	<bean id="topRuleScubeService" class="com.huateng.scube.client.ScubeClientProxy" >
		<property name="targetClass" value="com.huateng.toprules.scube.service.ITopRuleScubeService">
		</property>
	</bean>
	<bean id="topRulesUserScubeService" class="com.huateng.scube.client.ScubeClientProxy" >
		<property name="targetClass" value="com.huateng.toprules.scube.service.ITopRulesUserScubeService">
		</property>
	</bean>
</beans>