<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 内部服务依赖注入 -->
	<context:annotation-config />
		<context:component-scan base-package="com.huateng.scf.bas.crr.test;" />
	<!-- 加载properties文件 -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:scube_service.properties</value>
			</list>
		</property>
	</bean>
	  <!-- scube rpc 客户端配置 -->
	<bean   class="com.huateng.scube.common.ScubeClientConfig" init-method="init">
		<property name="application" value="${scube.application}"/>
		<!-- <property name="address" value="${scube.registries.address}"/> -->
		<property name="address" value="${scube.server.address}"/>
		<property name="requestTimeout" value="${scube.client.requestTimeout}"/>
		<property name="transMaxSize" value="${scube.client.transMaxSize}"/>
	</bean>
	<bean id="tradeServicel" class="com.huateng.scube.client.ScubeClientProxy">
		<property name="targetClass">
			<value>com.huateng.trade.service.TradeService</value>
		</property>
	</bean>
	
		<!-- scube rpc 服务端配置 -->
	<bean class="com.huateng.scube.common.ScubeServiceConfig" init-method="init">
		<property name="application" value="${scube.application}"/>
		<property name="address" value="${scube.registries.address}"/>
		<property name="minWorkerThread" value="${scube.service.minWorkerThread}"/>
		<property name="maxWorkerThread" value="${scube.service.maxWorkerThread}"/>
	</bean>
	
	
	<!-- scube服务端 扫描指定包 发布motan服务 -->
	<bean class="com.huateng.scube.server.impl.ScubeServiceAnnotationScan" init-method="doScan">
		<property name="packList">
			<list>
				<value>com.huateng.scf.bas.crr.test</value>
			</list>
		</property>
	</bean>
	

	
	
		<bean id="memCachedClient" class="com.whalin.MemCached.MemCachedClient">
		<constructor-arg>
			<value>memcachedPool</value>
		</constructor-arg>
	</bean>
	<bean id="memcachedPool" class="com.whalin.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>memcachedPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>170.252.200.73:11211</value>
			</list>
		</property>
		<property name="initConn">
			<value>2</value>
		</property>
		<property name="minConn">
			<value>2</value>
		</property>
		<property name="maxConn">
			<value>5</value>
		</property>
	</bean>
	<!-- memcached service config -->
	<bean id="memcacheManager" class="com.huateng.base.cache.memcached.MemcachedManager">
		<property name="cacheClient" ref="memCachedClient"></property>
	</bean>

	<bean id="memcacheService" class="com.huateng.base.cache.impl.CacheServiceImpl">
		<property name="cacheManager" ref="memcacheManager"></property>
	</bean>
    <import resource="classpath*:ActiveMQ.xml"/>	
	
	
</beans>